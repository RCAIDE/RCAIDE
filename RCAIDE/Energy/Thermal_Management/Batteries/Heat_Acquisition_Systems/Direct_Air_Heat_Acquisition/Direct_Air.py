## @ingroup Energy-Thermal_Management-Batteries-Heat_Aquisition_Systems
# RCAIDE/Energy/Thermal_Management/Batteries/Heat_Aquisition_Systems/Direct_Air.py
# 
# 
# Created:  Jul 2023, M. Clarke 

# ----------------------------------------------------------------------------------------------------------------------
#  IMPORT
# ----------------------------------------------------------------------------------------------------------------------
  
from RCAIDE.Energy.Energy_Component import Energy_Component  
from RCAIDE.Methods.Thermal_Management.Batteries.Performance.Heat_Acquisition_System.Direct_Air_Heat_Aquistion import direct_convection_model
from RCAIDE.Attributes.Gases import Air 

# ----------------------------------------------------------------------------------------------------------------------
#  Atmospheric_Air_Convection_Heat_Exchanger
# ----------------------------------------------------------------------------------------------------------------------
## @ingroup Energy-Thermal_Management-Batteries-Heat_Aquisition_Systems
class Direct_Air(Energy_Component):
    """This provides output values for a direct convention heat exchanger of a bettery pack
    
    Assumptions:
    None
    
    Source:
    N/A
    """
    
    def __defaults__(self):  
        self.tag                                      = 'Direct_Air_Heat_Aquisition_System'
        self.cooling_fluid                            = Air()    
        self.cooling_fluid.flowspeed                  = 0.01                                          
        self.convective_heat_transfer_coefficient     = 35.     # [W/m^2K] 
        self.heat_transfer_efficiency                 = 1.0      
        return
    
    def compute_heat_removed(HAS,battery,Q_heat_gen,T_cell,state,dt,i): 
        '''Computes the net heat generated by the battery pack with direct air cooling heat 
        aquisition system
        
        Assumtions:
        None
        
        Source
        None 
        
        Inputs:
        self                  - heat aquisition system                         [-]
        battery               - battery pack                                   [-]
        Q_heat_gen            - thermal load generated by battery              [W] 
        T_cell                - temperature of the battery cell                [K]
        state                 - conditions of system                           [-]
        dt                    - time step                                      [s]
        i                     - control point                                  [-]
        
        Outputs 
        Q_heat_gen_tot        - total heat generated by pack                   [W]
        Q_net                 - net heat accumulated in battery pack           [W]
        T_current             - updated battery temperature at new timestep    [K]
        ''' 
        
        Q_heat_gen_tot, Q_convec, T_current , HAS_outputs = direct_convection_model(HAS, battery, Q_heat_gen, T_cell, state, dt, i)
         
        return Q_heat_gen_tot, Q_convec, T_current, HAS_outputs
        
