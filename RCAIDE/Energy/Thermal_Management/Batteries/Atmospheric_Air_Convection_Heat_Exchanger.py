## @ingroup Components-Energy-Thermal_Management 
# RCAIDE/Energy/Thermal_Management/Atmospheric_Air_Convection_Heat_Exchanger.py
# (c) Copyright The Board of Trustees of RCAIDE
# 
# Created:  Jul 2023, M. Clarke 

# ----------------------------------------------------------------------------------------------------------------------
#  IMPORT
# ----------------------------------------------------------------------------------------------------------------------
 
from RCAIDE.Core import Data
from RCAIDE.Energy.Energy_Component import Energy_Component 
from RCAIDE.Methods.Thermal_Management.Batteries.Atmospheric_Air_Convection_Cooling.direct_convection_model import compute_net_convected_heat 
from RCAIDE.Attributes.Gases import Air

# ----------------------------------------------------------------------------------------------------------------------
#  Atmospheric_Air_Convection_Heat_Exchanger
# ----------------------------------------------------------------------------------------------------------------------
## @ingroup Components-Energy-Thermal_Management 
class Atmospheric_Air_Convection_Heat_Exchanger(Energy_Component):
    """This provides output values for a direct convention heat exchanger of a bettery pack
    
    Assumptions:
    None
    
    Source:
    N/A
    """
    
    def __defaults__(self):  
        self.tag                                      = 'Atmospheric_Air_Convection_Heat_Exchanger'
        self.cooling_fluid                            = Air()    
        self.cooling_fluid.flowspeed                  = 0.01                                          
        self.convective_heat_transfer_coefficient     = 35.     # [W/m^2K] 
        self.heat_transfer_efficiency                 = 1.0      
        return
    
    def compute_net_generated_battery_heat(self,battery,Q_heat_gen,numerics,freestream): 
        '''Computes the net heat generate by the battery pack with an a direct atmospheric air 
        heat exchanger
        
        Assumtions:
        None
        
        Source
        None 
        
        Inputs:
        self (heat exchanger) - thermal management system                 [-]
        battery               - battery pack                              [-]
        Q_heat_gen            - thermal load generated by battery         [-]
        numerics              - RCAIDE mission numerics                   [-]
        freestream            - freestream conditions                     [-]
        
        Outputs
        btms_resylts          - battery thermal management system resukts [-]
        '''
        Q_heat_gen_tot,  P_net,  T_ambient, T_current =  compute_net_convected_heat(self,battery,Q_heat_gen,numerics,freestream) 

        btms_results = Data()
        btms_results.operating_conditions = Data(battery_current_temperature = T_current,
                                                 heat_energy_generated       = Q_heat_gen_tot )   
        return btms_results
        
