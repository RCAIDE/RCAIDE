## @ingroup Library-Compoments-Thermal_Management-Batteries-Heat_Acquisition_Systems
# RCAIDE/Library/Compoments/Thermal_Management/Batteries/Heat_Acquisition_Systems/No_Heat_Acquisition.py
# (c) Copyright 2023 Aerospace Research Community LLC
# 
# Created:  Jul 2023, M. Clarke 

# ----------------------------------------------------------------------------------------------------------------------
#  IMPORT
# ----------------------------------------------------------------------------------------------------------------------
  
from RCAIDE.Library.Components import Component   
from RCAIDE.Library.Methods.Thermal_Management.Batteries.Heat_Acquisition_Systems.No_Heat_Acquisition import no_heat_acquisition_model

# ----------------------------------------------------------------------------------------------------------------------
#  No_Heat_Exchanger
# ----------------------------------------------------------------------------------------------------------------------
## @ingroup Library-Compoments-Thermal_Management-Batteries-Heat_Acquisition_Systems
class No_Heat_Acquisition(Component):
    """This provides output values for a direct convention heat exchanger of a bettery pack 
    """
    
    def __defaults__(self):  
        """This sets the default.

        Assumptions:
            None

        Source:
            None 
        """                
        self.tag   = 'No_Heat_Acquisition'
        return
    
    def compute_heat_removed(self,battery,Q_heat_gen,T_cell,state,dt,i): 
        '''Computes the net heat generated by the battery pack with no heat acquisition system 
        
        Assumtions:
            None
        
        Source
            None 
        
        
        Args:
            HAS                     (dict): heat acquisition system                        [-]
            battery                 (dict): battery pack                                   [-]
            Q_heat_gen     (numpy.ndarray): thermal load generated by battery              [W] 
            T_cell         (numpy.ndarray): temperature of the battery cell                [K]
            state                   (dict): conditions of system                           [-]
            dt                     (float): time step                                      [s]
            i                        (int): control point                                  [unitless]
        
        Outputs
        HAS_outputs
            .Q_heat_gen_tot  (numpy.ndarray): total heat generated by pack                   [W]
            .Q_net           (numpy.ndarray): net heat accumulated in battery pack           [W]
            .T_current       (numpy.ndarray): updated battery temperature at new timestep    [K]
        '''  
             
        HAS_outputs = no_heat_acquisition_model(self,battery, Q_heat_gen, T_cell, state, dt, i)
              
        return HAS_outputs
        
