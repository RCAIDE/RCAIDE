File: RCAIDE\Library\Methods\Aerodynamics\AERODAS\post_stall_coefficients.py
  Line 74: Subscript Assignment: CL2[con2] = -0.032 * (alpha[con2] / Units.deg - 92.0) - RCL2 * ((92.0 * Units.deg - alpha[con2]) / (51.0 * Units.deg)) ** N2
  Line 75: Subscript Assignment: CL2[con3] = -0.032 * (alpha[con3] / Units.deg - 92.0) + RCL2 * ((alpha[con3] - 92.0 * Units.deg) / (51.0 * Units.deg)) ** N2
  Line 82: Subscript Assignment: CL2[con4] = 0.0
  Line 83: Subscript Assignment: CL2[con5] = 0.032 * (alphan[con5] / Units.deg - 92.0) + RCL2 * ((92.0 * Units.deg - alphan[con5]) / (51.0 * Units.deg)) ** N2
  Line 84: Subscript Assignment: CL2[con6] = 0.032 * (alphan[con6] / Units.deg - 92.0) - RCL2 * ((alphan[con6] - 92.0 * Units.deg) / (51.0 * Units.deg)) ** N2
  Line 89: Subscript Assignment: CD2[con8] = CD1max[con8] + (CD2max - CD1max[con8]) * rp.sin((alpha[con8] - ACD1[con8]) / (rp.pi / 2 - ACD1[con8]))
  Line 95: Subscript Assignment: CD2[con9] = 0.0
  Line 96: Subscript Assignment: CD2[con10] = CD1max[con10] + (CD2max - CD1max[con10]) * rp.sin((alphan[con10] - ACD1[con10]) / (rp.pi / 2 - ACD1[con10]))
  Total matches in this file: 8

File: RCAIDE\Library\Methods\Aerodynamics\AERODAS\pre_stall_coefficients.py
  Line 53: Boolean Indexing: RCL1[RCL1 <= 0] = 1e-16
  Line 62: Boolean Indexing: CL1[alpha > A0] = S1 * (alpha[alpha > A0] - A0) - RCL1[alpha > A0] * ((alpha[alpha > A0] - A0) / (ACL1[alpha > A0] - A0)) ** N1[alpha > A0]
  Line 63: Boolean Indexing: CL1[alpha < A0] = S1 * (alpha[alpha < A0] - A0) + RCL1[alpha < A0] * ((A0 - alpha[alpha < A0]) / (ACL1[alpha < A0] - A0)) ** N1[alpha < A0]
  Line 68: Subscript Assignment: CD1[con] = CDmin[con] + (CD1max[con] - CDmin[con]) * ((alpha[con] - ACDmin) / (ACD1[con] - ACDmin)) ** 2
  Line 69: Subscript Assignment: CD1[rp.logical_not(con)] = 0.0
  Total matches in this file: 5

File: RCAIDE\Library\Methods\Aerodynamics\Airfoil_Panel_Method\airfoil_analysis.py
  Line 107: Subscript Assignment: X_BOT[1:] = rp.cumsum(rp.sqrt((X_BOT_VALS[1:] - X_BOT_VALS[:-1]) ** 2 + (Y_BOT[1:] - Y_BOT[:-1]) ** 2), axis=0)
  Line 116: Subscript Assignment: X_BOT.mask[first_panel, aoas, res] = False
  Line 126: Subscript Assignment: DVE_BOT[1:-1] = ((b * DVE_BOT_TEMP[:-1] + a * DVE_BOT_TEMP[1:]) / (a + b)).data
  Line 128: Subscript Assignment: DVE_BOT[first_panel, aoas, res] = DVE_BOT_TEMP[first_panel, aoas, res]
  Line 129: Subscript Assignment: DVE_BOT[last_panel, aoas, res] = DVE_BOT_TEMP[last_paneldve, aoas, res]
  Line 151: Boolean Indexing: mask_count[mask_count == npanel] = npanel - 1
  Line 251: Subscript Assignment: X_TOP[1:] = rp.cumsum(rp.sqrt((X_TOP_VALS[1:] - X_TOP_VALS[:-1]) ** 2 + (Y_TOP[1:] - Y_TOP[:-1]) ** 2), axis=0)
  Line 260: Subscript Assignment: X_TOP.mask[first_panel, aoas, res] = False
  Line 270: Subscript Assignment: DVE_TOP[1:-1] = ((b * DVE_TOP_TEMP[:-1] + a * DVE_TOP_TEMP[1:]) / (a + b)).data
  Line 272: Subscript Assignment: DVE_TOP[first_panel, aoas, res] = DVE_TOP_TEMP[first_panel, aoas, res]
  Line 273: Subscript Assignment: DVE_TOP[last_panel, aoas, res] = DVE_TOP_TEMP[last_paneldve, aoas, res]
  Line 294: Boolean Indexing: mask_count[mask_count == npanel] = npanel - 1
  Line 421: Subscript Assignment: X_BL_BOT[1:] = rp.cumsum(rp.sqrt((X_BL_BOT_VALS[1:] - X_BL_BOT_VALS[:-1]) ** 2 + (Y_BL_BOT[1:] - Y_BL_BOT[:-1]) ** 2), axis=0)
  Line 430: Subscript Assignment: X_BL_BOT.mask[first_panel, aoas, res] = False
  Line 444: Subscript Assignment: X_BL_TOP[1:] = rp.cumsum(rp.sqrt((X_BL_TOP_VALS[1:] - X_BL_TOP_VALS[:-1]) ** 2 + (Y_BL_TOP[1:] - Y_BL_TOP[:-1]) ** 2), axis=0)
  Line 453: Subscript Assignment: X_BL_TOP.mask[first_panel, aoas, res] = False
  Line 525: Subscript Assignment: FUNC[:, case, cpt] = rp.concatenate([bot_func[::-1], top_func])
  Total matches in this file: 17

File: RCAIDE\Library\Methods\Aerodynamics\Airfoil_Panel_Method\heads_method.py
  Line 119: Subscript Assignment: H[0] = ShapeFactor_0[case, cpt]
  Line 121: Subscript Assignment: Theta[0] = THETA_0[case, cpt]
  Line 123: Subscript Assignment: H1[0] = (DEL_0[case, cpt] - DELTA_STAR_0[case, cpt]) / THETA_0[case, cpt]
  Line 125: Subscript Assignment: H1[0] = 3.417285
  Line 128: Subscript Assignment: cf[0] = CF_0[case, cpt]
  Line 130: Subscript Assignment: VeThetaH1[0] = Ve_i[0] * Theta[0] * H1[0]
  Line 140: Subscript Assignment: H[i] = H[i - 1]
  Line 141: Subscript Assignment: cf[i] = cf[i - 1]
  Line 153: Subscript Assignment: VeThetaH1[i] = VeThetaH1[i - 1]
  Line 156: Subscript Assignment: H1[i] = VeThetaH1[i] / (Ve_i[i] * Theta[i])
  Line 159: Subscript Assignment: H[i] = getH(H1[i])
  Line 162: Subscript Assignment: cf[i] = getcf(i, H[i], Theta[i])
  Total matches in this file: 12

File: RCAIDE\Library\Methods\Aerodynamics\Airfoil_Panel_Method\hess_smith.py
  Line 54: Subscript Assignment: b_2d[:-1, :, :] = st * rp.cos(alpha_2d) - rp.sin(alpha_2d) * ct
  Line 55: Subscript Assignment: b_2d[-1, :, :] = -(ct[0, :, :] * rp.cos(alpha_2d[-1, :, :]) + st[0, :, :] * rp.sin(alpha_2d[-1, :, :])) - (ct[-1, :, :] * rp.cos(alpha_2d[-1, :, :]) + st[-1, :, :] * rp.sin(alpha_2d[-1, :, :]))
  Total matches in this file: 2

File: RCAIDE\Library\Methods\Aerodynamics\Airfoil_Panel_Method\infl_coeff.py
  Line 45: Subscript Assignment: ainfl[:, :, :-1, :-1] = pi2inv * (st_i_j * rp.log(r_ij[:, :, :, 1:] / r_ij[:, :, :, :-1]) + ct_i_j * beta_ij)
  Line 47: Subscript Assignment: ainfl[:, :, :-1, -1] = pi2inv * rp.sum(mat2, axis=3)
  Line 49: Subscript Assignment: ainfl[:, :, -1, :-1] = pi2inv * rp.sum(mat3, axis=2)
  Line 51: Subscript Assignment: ainfl[:, :, -1, -1] = rp.sum(rp.sum(mat4, axis=3), axis=2)
  Line 71: Boolean Indexing: r_ratio[r_ratio > 1.0] = 1.0
  Line 76: Subscript Assignment: betaij[aoas, res, diag_indices, diag_indices] = rp.pi
  Line 78: Subscript Assignment: ainfl[:, :, :-1, :-1] = pi2inv * (sti_minus_j * rp.log(rij_plus_1 / rij) + cti_minus_j * betaij)
  Line 80: Subscript Assignment: ainfl[:, :, :-1, -1] = mat_1
  Line 83: Subscript Assignment: ainfl[:, :, -1, :-1] = mat_2[:, :, 0] + mat_2[:, :, -1]
  Line 84: Subscript Assignment: ainfl[:, :, -1, -1] = rp.sum(mat_3, axis=3)[:, :, 0] + rp.sum(mat_3, axis=3)[:, :, -1]
  Total matches in this file: 10

File: RCAIDE\Library\Methods\Aerodynamics\Airfoil_Panel_Method\panel_geometry.py
  Line 47: Subscript Assignment: norm[:, 0, :, :] = -st
  Line 48: Subscript Assignment: norm[:, 1, :, :] = ct
  Total matches in this file: 2

File: RCAIDE\Library\Methods\Aerodynamics\Airfoil_Panel_Method\thwaites_method.py
  Line 75: Subscript Assignment: theta2_Ve6[0] = theta_0 ** 2 * Ve_i[0] ** 6
  Line 79: Subscript Assignment: theta2_Ve6[i] = RK4(i - 1, dx_i, x_i, theta2_Ve6, dy_by_dx)
  Line 94: Boolean Indexing: H[H < 0] = 1e-06
  Line 114: Subscript Assignment: delta[0] = 0
  Line 117: Subscript Assignment: Re_x[0] = 1e-05
  Line 162: Subscript Assignment: H[idx1] = 2.61 - 3.75 * lambda_val[idx1] + 5.24 * lambda_val[idx1] ** 2
  Line 184: Subscript Assignment: l[idx1] = 0.22 + 1.57 * lambda_val[idx1] - 1.8 * lambda_val[idx1] ** 2
  Total matches in this file: 7

File: RCAIDE\Library\Methods\Aerodynamics\Airfoil_Panel_Method\velocity_distribution.py
  Line 61: Boolean Indexing: r_ratio[r_ratio > 1.0] = 1.0
  Line 74: Augmented Assignment: vt_2d += rp.sum(qg_2d / 2 / rp.pi * (sti_minus_j_2d * betaij_2d - cti_minus_j_2d * rp.log(rij_plus_1_2d / rij_2d)), 1) + rp.sum(gamma / 2 / rp.pi * (sti_minus_j_2d * rp.log(rij_plus_1_2d / rij_2d) + cti_minus_j_2d * betaij_2d), 1)
  Total matches in this file: 2

File: RCAIDE\Library\Methods\Aerodynamics\Common\Drag\compressibility_drag.py
  Line 98: Subscript Assignment: cd_c_v_base[low_inds] = drag_divergence(Mach[low_inds], geometry, Cl[low_inds])
  Line 100: Boolean Indexing: cd_c_v_base[Mach >= peak_mach] = wave_drag_volume(geometry, Mach[Mach >= peak_mach], scaling_factor)
  Line 103: Subscript Assignment: cd_c_v[low_inds] = cd_c_v_base[low_inds] * sub_h00(Mach[low_inds]) + transonic_drag_function(Mach[low_inds], a1[low_inds], peak_mach, peak_volume_total[low_inds]) * (1 - sub_h00(Mach[low_inds]))
  Line 104: Subscript Assignment: cd_c_v[hi_inds] = transonic_drag_function(Mach[hi_inds], a2[hi_inds], peak_mach, peak_volume_total[hi_inds]) * sup_h00(Mach[hi_inds]) + cd_c_v_base[hi_inds] * (1 - sup_h00(Mach[hi_inds]))
  Line 175: Boolean Indexing: cd_c_l[Mach >= 1.01] = cd_lift_wave[0:len(Mach[Mach >= 1.01]), 0]
  Total matches in this file: 5

File: RCAIDE\Library\Methods\Aerodynamics\Common\Drag\lift_wave_drag.py
  Line 39: Boolean Indexing: cd_c_l[mach >= 1.01] = cd_lift_wave[0:len(mach[mach >= 1.01]), 0]
  Total matches in this file: 1

File: RCAIDE\Library\Methods\Aerodynamics\Common\Drag\miscellaneous_drag.py
  Line 43: Augmented Assignment: swet_tot += wing.areas.wetted
  Line 45: Augmented Assignment: swet_tot += fuselage.areas.wetted
  Line 47: Augmented Assignment: swet_tot += boom.areas.wetted
  Line 53: Augmented Assignment: swet_tot += propulsor.nacelle.areas.wetted
  Line 58: Augmented Assignment: swet_tot += propulsor.nacelle.areas.wetted
  Line 76: Subscript Assignment: nacelle_base_drag_results[propulsor.nacelle.tag] = nacelle_base_drag * rp.ones_like(Mach)
  Line 77: Augmented Assignment: total_nacelle_base_drag += nacelle_base_drag
  Line 84: Subscript Assignment: nacelle_base_drag_results[propulsor.nacelle.tag] = nacelle_base_drag * rp.ones_like(Mach)
  Line 85: Augmented Assignment: total_nacelle_base_drag += nacelle_base_drag
  Total matches in this file: 9

File: RCAIDE\Library\Methods\Aerodynamics\Common\Drag\parasite_drag_fuselage.py
  Line 68: Boolean Indexing: D[Mach < 0.95] = rp.sqrt(1 - (1 - Mach[Mach < 0.95] ** 2) * d_d ** 2)
  Line 69: Boolean Indexing: D[Mach >= 0.95] = rp.sqrt(1 - d_d ** 2)
  Line 72: Boolean Indexing: a[Mach < 0.95] = 2 * (1 - Mach[Mach < 0.95] ** 2) * d_d ** 2 * (rp.arctanh(D[Mach < 0.95]) - D[Mach < 0.95]) / D[Mach < 0.95] ** 3
  Line 75: Boolean Indexing: a[Mach >= 0.95] = 2 * d_d ** 2 * (rp.arctanh(D[Mach >= 0.95]) - D[Mach >= 0.95]) / D[Mach >= 0.95] ** 3
  Line 80: Boolean Indexing: du_max_u[Mach < 0.95] = a[Mach < 0.95] / ((2 - a[Mach < 0.95]) * (1 - Mach[Mach < 0.95] ** 2) ** 0.5)
  Line 81: Boolean Indexing: du_max_u[Mach >= 0.95] = a[Mach >= 0.95] / (2 - a[Mach >= 0.95])
  Line 91: Subscript Assignment: D_low[low_inds] = rp.sqrt(1 - (1 - Mach[low_inds] ** 2) * d_d ** 2)
  Line 92: Subscript Assignment: a_low[low_inds] = 2 * (1 - Mach[low_inds] ** 2) * d_d ** 2 * (rp.arctanh(D_low[low_inds]) - D_low[low_inds]) / D_low[low_inds] ** 3
  Line 95: Subscript Assignment: du_max_u_low[low_inds] = a_low[low_inds] / ((2 - a_low[low_inds]) * (1 - Mach[low_inds] ** 2) ** 0.5)
  Line 97: Subscript Assignment: D_high[high_inds] = rp.sqrt(1 - d_d ** 2)
  Line 98: Subscript Assignment: a_high[high_inds] = 2 * d_d ** 2 * (rp.arctanh(D_high[high_inds]) - D_high[high_inds]) / D_high[high_inds] ** 3
  Line 100: Subscript Assignment: du_max_u_high[high_inds] = a_high[high_inds] / (2 - a_high[high_inds])
  Line 121: Subscript Assignment: state.conditions.aerodynamics.coefficients.drag.parasite[fuselage.tag] = results
  Total matches in this file: 13

File: RCAIDE\Library\Methods\Aerodynamics\Common\Drag\parasite_drag_nacelle.py
  Line 123: Subscript Assignment: state.conditions.aerodynamics.coefficients.drag.parasite[nacelle.tag] = results
  Total matches in this file: 1

File: RCAIDE\Library\Methods\Aerodynamics\Common\Drag\parasite_drag_pylon.py
  Line 73: Subscript Assignment: drag.parasite[nacelle.tag + '_pylon'] = pylon_result
  Total matches in this file: 1

File: RCAIDE\Library\Methods\Aerodynamics\Common\Drag\parasite_drag_wing.py
  Line 120: Subscript Assignment: seg_kw[subsonic] = 1.0 + 2.0 * C * (t_c_w * cos_sweepv ** 2) / rp.sqrt(1.0 - (Mc[subsonic] * cos_sweep) ** 2) + (C * cos_sweep * t_c_w) ** 2 * (1.0 + 5.0 * cos_sweep ** 2) / (2.0 * (1.0 - (Mc[ind] * cos_sweep) ** 2.0))
  Line 127: Augmented Assignment: seg_k_w *= transonic_spline.compute(Mc)
  Line 128: Augmented Assignment: seg_k_w += 1 - transonic_spline.compute(Mc)
  Line 163: Subscript Assignment: state.conditions.aerodynamics.coefficients.drag.parasite[geometry.tag] = wing_result
  Total matches in this file: 4

File: RCAIDE\Library\Methods\Aerodynamics\Common\Drag\parasite_total.py
  Line 55: Augmented Assignment: total_parasite_drag += renormalize(wing.tag, wing.areas.reference, conditions, vehicle_reference_area)
  Line 63: Augmented Assignment: total_parasite_drag += renormalize(fuselage.tag, fuselage.areas.front_projected, conditions, vehicle_reference_area)
  Line 78: Augmented Assignment: total_parasite_drag += renormalize(propulsor.nacelle.tag, propulsor.nacelle.diameter ** 2 / 4 * rp.pi, conditions, vehicle_reference_area)
  Line 83: Augmented Assignment: total_parasite_drag += renormalize(propulsor.nacelle.tag + '_pylon', propulsor.nacelle.diameter ** 2 / 4 * rp.pi, conditions, vehicle_reference_area)
  Total matches in this file: 4

File: RCAIDE\Library\Methods\Aerodynamics\Common\Drag\supersonic_wave_drag_volume_raymer.py
  Line 66: Boolean Indexing: Dq_vehicle[mach >= 1.2] = scaling_factor * (1 - 0.2 * (mach[mach >= 1.2] - 1.2) ** 0.57 * (1 - rp.pi * LE_sweep ** 0.77 / 100)) * Dq_SH
  Total matches in this file: 1

File: RCAIDE\Library\Methods\Aerodynamics\Common\Drag\wave_drag.py
  Line 59: Boolean Indexing: wave_drag_lift[Mach >= 1.01] = CDwl
  Line 81: Boolean Indexing: ret[x > 0.178] = 0.4935 - 0.2382 * x[x > 0.178] + 1.6306 * x[x > 0.178] ** 2 - 0.86 * x[x > 0.178] ** 3 + 0.2232 * x[x > 0.178] ** 4 - 0.0365 * x[x > 0.178] ** 5 - 0.5
  Total matches in this file: 2

File: RCAIDE\Library\Methods\Aerodynamics\Common\Lift\BET_sectional_properties.py
  Line 64: Boolean Indexing: Cl_max_ref[Cl_max_ref < 0.7] = 0.7
  Line 70: Boolean Indexing: Cl[Cl > Cl1maxp] = Cl1maxp[Cl > Cl1maxp]
  Line 71: Boolean Indexing: Cl[AoA >= rp.pi / 2] = 0.0
  Line 75: Subscript Assignment: Cl[KT_cond] = Cl[KT_cond] / ((1 - Ma[KT_cond] * Ma[KT_cond]) ** 0.5 + Ma[KT_cond] * Ma[KT_cond] / (1 + (1 - Ma[KT_cond] * Ma[KT_cond]) ** 0.5) * Cl[KT_cond] / 2)
  Line 76: Boolean Indexing: Cl[Ma[:, :] >= 1.0] = Cl[Ma[:, :] >= 1.0]
  Line 80: Boolean Indexing: Cdval[AoA >= rp.pi / 2] = 2.0
  Line 92: Subscript Assignment: Cl[:, locs, :] = Cl_af[:, locs, :]
  Line 93: Subscript Assignment: Cdval[:, locs, :] = Cdval_af[:, locs, :]
  Line 102: Subscript Assignment: Cl[:, locs] = Cl_af[:, locs]
  Line 103: Subscript Assignment: Cdval[:, locs] = Cdval_af[:, locs]
  Line 106: Boolean Indexing: Cl[Cl == 0] = 1e-12
  Line 138: Boolean Indexing: lamdaw[lamdaw <= 0.0] = 1e-12
  Total matches in this file: 12

File: RCAIDE\Library\Methods\Aerodynamics\Common\Lift\compute_wing_wake.py
  Line 120: Subscript Assignment: Va_deficit[y_inside] = W0 * rp.exp(-4 * rp.log(2) * (abs(VD.ZC[y_inside]) / b) ** 2)
  Total matches in this file: 1

File: RCAIDE\Library\Methods\Aerodynamics\Vortex_Lattice_Method\build_VLM_surrogates.py
  Line 65: Subscript Assignment: surrogates.Clift_wing_alpha[wing.tag] = RegularGridInterpolator((AoA_data, mach_data), training.Clift_wing_alpha[wing.tag], method='linear', bounds_error=False, fill_value=None)
  Line 66: Subscript Assignment: surrogates.Cdrag_wing_alpha[wing.tag] = RegularGridInterpolator((AoA_data, mach_data), training.Cdrag_wing_alpha[wing.tag], method='linear', bounds_error=False, fill_value=None)
  Total matches in this file: 2

File: RCAIDE\Library\Methods\Aerodynamics\Vortex_Lattice_Method\evaluate_VLM.py
  Line 438: Subscript Assignment: conditions.aerodynamics.coefficients.lift.inviscid_wings[wing.tag] = inviscid_wing_lifts
  Line 439: Subscript Assignment: conditions.aerodynamics.coefficients.lift.compressible_wings[wing.tag] = inviscid_wing_lifts
  Line 440: Subscript Assignment: conditions.aerodynamics.coefficients.drag.induced.inviscid_wings[wing.tag] = inviscid_wing_drags
  Line 481: Augmented Assignment: i += 1
  Line 485: Augmented Assignment: i += 1
  Line 487: Subscript Assignment: conditions.aerodynamics.coefficients.lift.inviscid_wings[wing.tag] = Clift_wing
  Line 488: Subscript Assignment: conditions.aerodynamics.coefficients.lift.compressible_wings[wing.tag] = Clift_wing
  Line 489: Subscript Assignment: conditions.aerodynamics.coefficients.drag.induced.inviscid_wings[wing.tag] = Cdrag_wing
  Total matches in this file: 8

File: RCAIDE\Library\Methods\Aerodynamics\Vortex_Lattice_Method\train_VLM_surrogates.py
  Line 139: Subscript Assignment: Clift_wing_alpha[wing.tag] = rp.reshape(Clift_wing_res[wing.tag], (len_Mach, len_AoA)).T
  Line 140: Subscript Assignment: Cdrag_wing_alpha[wing.tag] = rp.reshape(Cdrag_wing_res[wing.tag], (len_Mach, len_AoA)).T
  Line 489: Subscript Assignment: Clift_d_a[a_i, :] = Clift_res_d_a[:, 0] - Clift_alpha_0[0, :]
  Line 490: Subscript Assignment: Cdrag_d_a[a_i, :] = Cdrag_res_d_a[:, 0] - Cdrag_alpha_0[0, :]
  Line 491: Subscript Assignment: CX_d_a[a_i, :] = CX_res_d_a[:, 0] - CX_alpha_0[0, :]
  Line 492: Subscript Assignment: CY_d_a[a_i, :] = CY_res_d_a[:, 0] - CY_alpha_0[0, :]
  Line 493: Subscript Assignment: CZ_d_a[a_i, :] = CZ_res_d_a[:, 0] - CZ_alpha_0[0, :]
  Line 494: Subscript Assignment: CL_d_a[a_i, :] = -(CL_res_d_a[:, 0] - CL_alpha_0[0, :])
  Line 495: Subscript Assignment: CM_d_a[a_i, :] = CM_res_d_a[:, 0] - CM_alpha_0[0, :]
  Line 496: Subscript Assignment: CN_d_a[a_i, :] = CN_res_d_a[:, 0] - CN_alpha_0[0, :]
  Line 546: Subscript Assignment: Clift_d_e[e_i, :] = Clift_res_d_e[:, 0] - Clift_alpha_0[0, :]
  Line 547: Subscript Assignment: Cdrag_d_e[e_i, :] = Cdrag_res_d_e[:, 0] - Cdrag_alpha_0[0, :]
  Line 548: Subscript Assignment: CX_d_e[e_i, :] = CX_res_d_e[:, 0] - CX_alpha_0[0, :]
  Line 549: Subscript Assignment: CY_d_e[e_i, :] = CY_res_d_e[:, 0] - CY_alpha_0[0, :]
  Line 550: Subscript Assignment: CZ_d_e[e_i, :] = CZ_res_d_e[:, 0] - CZ_alpha_0[0, :]
  Line 551: Subscript Assignment: CL_d_e[e_i, :] = CL_res_d_e[:, 0] - CL_alpha_0[0, :]
  Line 552: Subscript Assignment: CM_d_e[e_i, :] = CM_res_d_e[:, 0] - CM_alpha_0[0, :]
  Line 553: Subscript Assignment: CN_d_e[e_i, :] = CN_res_d_e[:, 0] - CN_alpha_0[0, :]
  Line 602: Subscript Assignment: Clift_d_r[r_i, :] = Clift_res_d_r[:, 0] - Clift_alpha_0[0, :]
  Line 603: Subscript Assignment: Cdrag_d_r[r_i, :] = Cdrag_res_d_r[:, 0] - Cdrag_alpha_0[0, :]
  Line 604: Subscript Assignment: CX_d_r[r_i, :] = CX_res_d_r[:, 0] - CX_alpha_0[0, :]
  Line 605: Subscript Assignment: CY_d_r[r_i, :] = CY_res_d_r[:, 0] - CY_alpha_0[0, :]
  Line 606: Subscript Assignment: CZ_d_r[r_i, :] = CZ_res_d_r[:, 0] - CZ_alpha_0[0, :]
  Line 607: Subscript Assignment: CL_d_r[r_i, :] = CL_res_d_r[:, 0] - CL_alpha_0[0, :]
  Line 608: Subscript Assignment: CM_d_r[r_i, :] = CM_res_d_r[:, 0] - CM_alpha_0[0, :]
  Line 609: Subscript Assignment: CN_d_r[r_i, :] = -(CN_res_d_r[:, 0] - CN_alpha_0[0, :])
  Line 655: Subscript Assignment: Clift_d_s[s_i, :] = Clift_res_d_s[:, 0] - Clift_alpha_0[0, :]
  Line 656: Subscript Assignment: Cdrag_d_s[s_i, :] = Cdrag_res_d_s[:, 0] - Cdrag_alpha_0[0, :]
  Line 657: Subscript Assignment: CX_d_s[s_i, :] = CX_res_d_s[:, 0] - CX_alpha_0[0, :]
  Line 658: Subscript Assignment: CY_d_s[s_i, :] = CY_res_d_s[:, 0] - CY_alpha_0[0, :]
  Line 659: Subscript Assignment: CZ_d_s[s_i, :] = CZ_res_d_s[:, 0] - CZ_alpha_0[0, :]
  Line 660: Subscript Assignment: CL_d_s[s_i, :] = CL_res_d_s[:, 0] - CL_alpha_0[0, :]
  Line 661: Subscript Assignment: CM_d_s[s_i, :] = CM_res_d_s[:, 0] - CM_alpha_0[0, :]
  Line 662: Subscript Assignment: CN_d_s[s_i, :] = CN_res_d_s[:, 0] - CN_alpha_0[0, :]
  Line 711: Subscript Assignment: Clift_d_f[f_i, :] = Clift_res_d_f[:, 0] - Clift_alpha_0[0, :]
  Line 712: Subscript Assignment: Cdrag_d_f[f_i, :] = Cdrag_res_d_f[:, 0] - Cdrag_alpha_0[0, :]
  Line 713: Subscript Assignment: CX_d_f[f_i, :] = CX_res_d_f[:, 0] - CX_alpha_0[0, :]
  Line 714: Subscript Assignment: CY_d_f[f_i, :] = CY_res_d_f[:, 0] - CY_alpha_0[0, :]
  Line 715: Subscript Assignment: CZ_d_f[f_i, :] = CZ_res_d_f[:, 0] - CZ_alpha_0[0, :]
  Line 716: Subscript Assignment: CL_d_f[f_i, :] = CL_res_d_f[:, 0] - CL_alpha_0[0, :]
  Line 717: Subscript Assignment: CM_d_f[f_i, :] = CM_res_d_f[:, 0] - CM_alpha_0[0, :]
  Line 718: Subscript Assignment: CN_d_f[f_i, :] = CN_res_d_f[:, 0] - CN_alpha_0[0, :]
  Line 791: Subscript Assignment: Clift_wing_alpha[wing.tag] = rp.concatenate((training_subsonic.Clift_wing_alpha[wing.tag][:, -1][:, None], training_supersonic.Clift_wing_alpha[wing.tag][:, 0][:, None]), axis=1)
  Line 792: Subscript Assignment: Cdrag_wing_alpha[wing.tag] = rp.concatenate((training_subsonic.Cdrag_wing_alpha[wing.tag][:, -1][:, None], training_supersonic.Cdrag_wing_alpha[wing.tag][:, 0][:, None]), axis=1)
  Line 1204: Subscript Assignment: Clift_wings[wing.tag] = rp.atleast_2d(rp.sum(dim_wing_lifts[:, i:i + 2], axis=1)).T / ref
  Line 1205: Subscript Assignment: Cdrag_wings[wing.tag] = rp.atleast_2d(rp.sum(dim_wing_drags[:, i:i + 2], axis=1)).T / ref
  Line 1206: Subscript Assignment: AoA_wing_induced[wing.tag] = rp.concatenate((alpha_i[i], alpha_i[i + 1]), axis=1)
  Line 1207: Augmented Assignment: i += 1
  Line 1209: Subscript Assignment: Clift_wings[wing.tag] = rp.atleast_2d(dim_wing_lifts[:, i]).T / ref
  Line 1210: Subscript Assignment: Cdrag_wings[wing.tag] = rp.atleast_2d(dim_wing_drags[:, i]).T / ref
  Line 1211: Subscript Assignment: AoA_wing_induced[wing.tag] = alpha_i[i]
  Line 1212: Augmented Assignment: i += 1
  Total matches in this file: 52

Matches per subdirectory:
  RCAIDE\Library\Methods\Aerodynamics\AERODAS: 13
  RCAIDE\Library\Methods\Aerodynamics\Airfoil_Panel_Method: 52
  RCAIDE\Library\Methods\Aerodynamics\Common\Drag: 41
  RCAIDE\Library\Methods\Aerodynamics\Common\Lift: 13
  RCAIDE\Library\Methods\Aerodynamics\Vortex_Lattice_Method: 62

Total matches overall: 181
